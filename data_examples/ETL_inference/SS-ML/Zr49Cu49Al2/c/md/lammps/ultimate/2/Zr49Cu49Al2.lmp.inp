# General setup
units metal
boundary p p p
atom_style atomic

# Reading the input geometry
read_data Zr49Cu49Al2-10000-1-1-1.data

# The EAM potential
pair_style eam/alloy
# For all pairs of atom types (* *), reads the EAM potential file 
# ZrCuAl.eam.alloy. See more at
# http://lammps.sandia.gov/doc/pair_eam.html
# Note: the masses and the cutoffs are already specified in the EAM 
#       potential file.
# Note: the EAM file above is in the DYNAMO multi-element setfl format.
# Note: the elements in the EAM file are mapped to LAMMPS atom types 
#       specified with the create_atoms command above by specifying N 
#       additional arguments after the filename.
pair_coeff * * ZrCuAl-2011.lammps.eam Zr Cu Al

###########################################################################
#
# Equilibration of the loaded atoms at 300 K
#
###########################################################################

# a time step of 1 fs
timestep 0.001

# setting the velocities of all atoms as an uniform distribution
velocity all create 300 12345 mom yes rot no dist gaussian

#
# Following the link below I start with the NVT ensemble
#
# https://lammps.sandia.gov/threads/msg08725.html
#

# setting time integration
#
fix 1 all nvt temp 300 300 1

# set thermo output
thermo 1000
thermo_style custom step lx ly lz press pxx pyy pzz pe temp

# run for 100 picoseconds
run 100000

write_restart zca-equ-nvt-300.restart

unfix 1

###########################################################################
#
# Equilibration of the loaded atoms in NVE
#
###########################################################################

#
# And then the NVE ensemble to see if the temperature 
# stays constant.  If so, then the system is at equilibrium.

# setting time integration
#
fix 1 all nve

# run for 150 picoseconds
run 150000

write_restart zca-equ-nve.restart

# store final cell length for strain calculations
variable tmp equal "lx"
variable L0 equal ${tmp}
print "Initial Length, L0: ${L0}"

unfix 1

###########################################################################
#
# Input file for uniaxial compressive loading
#
###########################################################################

reset_timestep 0

fix 1 all npt temp 300 300 1 y 0 0 1 z 0 0 1 drag 1

# this is the strain rate in s^-1
variable srate equal 1.0e7
# pointing that metal unit if time is ps (10^-12 s)
variable srate1 equal "-v_srate / 1.0e12"
fix 2 all deform 1 x erate ${srate1} units box remap x

# output strain and stress info to file
# for units metal, pressure is in [bars] = 100 [kPa] = 1/10000 [GPa]
# p2, p3, p4 are in GPa
variable strain equal "(lx - v_L0)/v_L0"
variable p1 equal "v_strain"
variable p2 equal "-pxx/10000"
variable p3 equal "-pyy/10000"
variable p4 equal "-pzz/10000"
fix def1 all print 100000 "${p1} ${p2} ${p3} ${p4}" file comp_100.def1.txt screen no

# display thermo
thermo 20000
thermo_style custom step v_strain temp v_p2 v_p3 v_p4 ke pe press vol lx ly lz

# dumpinng the structures with the respective stress tensors
compute spa all stress/atom NULL
dump dspa all custom 20000 zca-dspa.dump id type x y z c_spa[1] c_spa[2] c_spa[3] c_spa[4] c_spa[5] c_spa[6]

run 20000000
